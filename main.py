from PIL import Image
import numpy as np
import matplotlib.pyplot as plt
from PIL import ImageFilter
from PIL import ImageChops, ImageOps
from PIL import ImageStat as stat

im = Image.open('pic.jpg')
print("picture mode", im.mode)
print("size", im.size)



print(ImageFilter.EMBOSS.filterargs)
pic_L = im.convert("L")
ImageFilter.EMBOSS.filterargs = (
    (3, 3),1,128,(-1,  0,  1, -2,  0,  2, -1,  0,  1))
pic_sobel1 = pic_L.filter(ImageFilter.EMBOSS)

pic_sobel1.save("sobel1.jpg")
ImageFilter.EMBOSS.filterargs = (
    (3, 3),1,128,(-1, -2, -1, 0,  0, 0, 1, 2, 1))
pic_sobel2 =pic_L.filter(ImageFilter.EMBOSS)
pic_sobel2.save("sobel2.jpg")

plt.figure(figsize=(32, 16))
plt.subplot(1,3,1)
plt.title("pic sobel1")
plt.axis('off')
plt.subplot(1,3,2)
plt.title("pic sobel2")
plt.axis('off')
plt.subplot(1,3,3)
plt.title("pic mode L")
plt.axis('off')
plt.savefig('fig2.png')
plt.show()


detail = im.filter(ImageFilter.DETAIL)
edge_enhance = im.filter(ImageFilter.EDGE_ENHANCE_MORE)
sharpen = im.filter(ImageFilter.SHARPEN)
smooth = im.filter(ImageFilter.SMOOTH_MORE)


plt.figure(figsize=(32, 16))
plt.subplot(4,2,1)
plt.title("pic detail")
plt.imshow(detail,"gray")
plt.axis('off')
plt.subplot(4,2,2)
plt.title("different 1")
plt.imshow(ImageChops.difference(im, detail))
plt.axis('off')
plt.subplot(4,2,3)
plt.title(" pic  EDGE_ENHANCE_MORE")
plt.imshow(edge_enhance,"gray")
plt.axis('off')
plt.subplot(4,2,4)
plt.title("different 2")
plt.imshow(ImageChops.difference(im, edge_enhance))
plt.axis('off')
plt.subplot(4,2,5)
plt.title("pic  Sharpen")
plt.imshow(sharpen,"gray")
plt.axis('off')
plt.subplot(4,2,6)
plt.title("different3")
plt.imshow(ImageChops.difference(im, sharpen))
plt.axis('off')
plt.subplot(4,2,7)
plt.title("pic  smooth")
plt.imshow(smooth,"gray")
plt.axis('off')
plt.subplot(4,2,8)
plt.title("different4")
plt.imshow(ImageChops.difference(im, smooth))
plt.axis('off')
plt.savefig('fig3.png')
plt.show()


blur = im.filter(ImageFilter.GaussianBlur(radius=2))
unsharp = im.filter(ImageFilter.UnsharpMask(radius=3, percent=200, threshold=5))
minf = im.filter(ImageFilter.MinFilter(size=3))
maxf = im.filter(ImageFilter.MaxFilter(size=3))
median = im.filter(ImageFilter.MedianFilter(size=3))

plt.figure(figsize=(32, 16))
plt.subplot(4,2,1)
plt.title("filtr GaussianBlur")
plt.imshow(blur,"gray")
plt.axis('off')
plt.subplot(4,2,2)
plt.title("ro≈ºnica 1")
plt.imshow(ImageChops.difference(im, blur))
plt.axis('off')
plt.subplot(4,2,3)
plt.title("filtr UnsharpMask")
plt.imshow(unsharp,"gray")
plt.axis('off')
plt.subplot(4,2,4)
plt.title("different2")
plt.imshow(ImageChops.difference(im, unsharp))
plt.axis('off')
plt.subplot(4,2,5)
plt.title("filtr MedianFilter")
plt.imshow(median,"gray")
plt.axis('off')
plt.subplot(4,2,6)
plt.title("different 3")
plt.imshow(ImageChops.difference(im, median))
plt.axis('off')
plt.subplot(4,2,7)
plt.title("filtr MinFilter")
plt.imshow(minf,"gray")
plt.axis('off')
plt.subplot(4,2,8)
plt.title("different 4")
plt.imshow(ImageChops.difference(im, minf))
plt.axis('off')
plt.savefig('fig4.png')
plt.show()


def print_statistics(im):
    s = stat.Stat(im)
    print("extrema ", s.extrema)
    print("count ", s.count)
    print("mean ", s.mean)
    print("median ", s.median)
    print("stddev ", s.stddev)



imsz = Image.open('pic_gray.png')
print('*********** Stat pic gray ************')
print("Mode", imsz.mode)
print("Size", imsz.size)
print_statistics(imsz)
gray = imsz.convert("L")
gray.show()

equalized1 = ImageOps.equalize(gray, mask=None)
equalized1.save('equalized.png')

print('*********** Stat  equalized mode L ************')
print(equalized1.mode)
print(equalized1.size)
print_statistics(equalized1)

#punkt b
print(gray.histogram())
hist = equalized1.histogram()
hist2 = imsz.histogram()
x = hist
y = hist2

plt.figure(figsize=(32, 16))
plt.subplot(2,2,1)
plt.title("hist equalized")
plt.hist(x,bins="auto", ec="k", alpha =0.5)
plt.subplot(2,2,2)
plt.title("hist obraz_szary")
plt.hist(y,bins="auto", ec="k", alpha =0.5)
plt.show()

detail2 = imsz.filter(ImageFilter.DETAIL)
contur = imsz.filter(ImageFilter.CONTOUR)
sharpen2 = imsz.filter(ImageFilter.SHARPEN)

plt.figure(figsize=(32, 16))
plt.subplot(4,2,1)
plt.title("pic gray detail")
plt.imshow(detail2,"gray")
plt.axis('off')
plt.subplot(4,2,2)
plt.title("pic gray contour")
plt.imshow(contur,"gray")
plt.axis('off')
plt.subplot(4,2,3)
plt.title("pic gray Sharpen")
plt.imshow(sharpen2,"gray")
plt.axis('off')
plt.subplot(4,2,4)
plt.title("equalized")
plt.imshow(equalized1,"gray")
plt.axis('off')
plt.savefig('filters.png')